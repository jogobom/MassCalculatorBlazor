@page "/charged-to-neutral"

@using MassCalculator.Data
@using MassCalculator.Store.ChargedToNeutral
@using Fluxor

@inherits Fluxor.Blazor.Web.Components.FluxorComponent
@inject IDispatcher dispatcher
@inject IState<ChargedToNeutralState> chargedToNeutralState

<h3>Calculate neutral mass from a charged m/z</h3>

<p>
    Enter m/z:
    <input aria-label="Enter mass over charge" type="text" @oninput="SetMassOverCharge" value="@chargedToNeutralState.Value.MassOverCharge" style="margin-bottom: 15px" />
</p>

<p>
    Enter charge state:
    <input aria-label="Enter charge state" type="text" @oninput="SetCharge" value="@chargedToNeutralState.Value.Charge" style="margin-bottom: 15px" />
</p>

@if (@chargedToNeutralState.Value.NeutralMass == null)
{
    <p><em>Enter m/z and charge state to calculate all the charge states/isotopes</em></p>
}
else
{
    <h4>Neutral mass</h4>

    <p>@chargedToNeutralState.Value.NeutralMass</p>
}

@code {
    private void SetMassOverCharge(ChangeEventArgs obj)
    {
        if (obj.Value != null && double.TryParse((string)obj.Value, out var value))
        {
            dispatcher.Dispatch(new SetMassOverChargeAction(value));
        }
    }

    private void SetCharge(ChangeEventArgs obj)
    {
        if (obj.Value != null && int.TryParse((string)obj.Value, out var value))
        {
            dispatcher.Dispatch(new SetChargeAction(value));
        }
    }
}
