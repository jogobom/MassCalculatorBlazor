@page "/IsotopePrediction"
@using OxyPlot.Blazor
@using Fluxor
@using MassCalculator.Store.IsotopePrediction

@inherits Fluxor.Blazor.Web.Components.FluxorComponent
@inject IDispatcher Dispatcher
@inject IState<IsotopePredictionState> IsotopePredictionState

<h3>Isotope pattern prediction</h3>

<p>
    Enter chemical composition:
    <input aria-label="Enter chemical composition" type="text" @oninput="SetFormula" value="@IsotopePredictionState.Value.Formula" style="margin-bottom: 15px" />
</p>

@if (IsotopePredictionState.Value.Composition == null)
{
<p><em>Enter a formula using correctly-spelled chemical symbols with the correct upper and lower cases letters (e.g. C, H, O, Cl, Br, Mn, etc.) to calculate the predicted isotope pattern</em></p>
}
else if (!IsotopePredictionState.Value.Composition.Ingredients.Any())
{
<p><em>Enter a formula using correctly-spelled chemical symbols with the correct upper and lower cases letters (e.g. C, H, O, Cl, Br, Mn, etc.) to calculate the predicted isotope pattern</em></p>
    // Parse the string and look for any letters that don't match the chemical symbols we have in our database
}
else
{
<h4>@($"Predicted pattern for {IsotopePredictionState.Value.Composition}")</h4>
<BlazorPlotView Width="800px" Height="500px" Model="IsotopePredictionState.Value.PlotViewModel" />
<table class="table">
    <thead>
        <tr>
            <th>Mass</th>
            <th>Estimated Proportion</th>
        </tr>
    </thead>
    <tbody>
        @foreach (var isotope in IsotopePredictionState.Value.PredictedIsotopes)
        {
        <tr>
            <td>@isotope.X</td>
            <td>@isotope.Y</td>
        </tr>
        }
    </tbody>
</table>
}

@code {
    private void SetFormula(ChangeEventArgs obj)
    {
        if (obj.Value != null)
        {
            Dispatcher.Dispatch(new SetFormulaAction((string)obj.Value));
        }
    }
}