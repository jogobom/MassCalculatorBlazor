@page "/"
@using Fluxor
@using MassCalculator.Store.Index

@inherits Fluxor.Blazor.Web.Components.FluxorComponent
@inject IDispatcher dispatcher
@inject IState<NeutralToChargedState> neutralToChargedState

<h3>Calculate masses for charge states and isotopes</h3>

<p>
    Enter neutral monoisotopic mass:
    <input aria-label="Enter neutral monoisotopic mass" type="text" @oninput="SetMass" value="@neutralToChargedState.Value.Compound?.NeutralMonoisotopicMass" style="margin-bottom: 15px" />
</p>

@if (neutralToChargedState.Value.Compound == null)
{
    <p><em>Enter a mass to calculate all the charge states/isotopes</em></p>
}
else
{
    <h4>Positive ionisation</h4>
    <table class="table table-striped">
        <thead class="thead-dark">
            <tr>
                <th>Charge state</th>
                <th>Monoisotopic mass</th>
                @for (var n = 1; n < neutralToChargedState.Value.Compound.IsotopeCount; n++)
                {
                    <th>@($"Isotope {n}")</th>
                }
            </tr>
        </thead>
        <tbody>
            @foreach (var chargeState in neutralToChargedState.Value.Compound.ChargeStates)
            {
                <tr>
                    <td>@chargeState.Charge</td>
                    @foreach (var isotope in chargeState.Isotopes)
                    {
                        <td>@isotope.MassOverCharge</td>
                    }
                </tr>
            }
        </tbody>
    </table>

    <h4>Negative ionisation</h4>
    <table class="table table-striped">
        <thead class="thead-dark">
            <tr>
                <th>Charge state</th>
                <th>Monoisotopic mass</th>
                @for (var n = 1; n < neutralToChargedState.Value.Compound.IsotopeCount; n++)
                {
                    <th>@($"Isotope {n}")</th>
                }
            </tr>
        </thead>
        <tbody>
            @foreach (var chargeState in neutralToChargedState.Value.Compound.NegativeChargeStates)
            {
                <tr>
                    <td>@chargeState.Charge</td>
                    @foreach (var isotope in chargeState.Isotopes)
                    {
                        <td>@isotope.MassOverCharge</td>
                    }
                </tr>
            }
        </tbody>
    </table>
}

@code {
    private void SetMass(ChangeEventArgs obj)
    {
        if (obj.Value != null && double.TryParse((string)obj.Value, out var value))
        {
            dispatcher.Dispatch(new SetNeutralMassAction(value));
        }
    }
}
